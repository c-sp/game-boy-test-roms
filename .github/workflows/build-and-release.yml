name: build and release

on: push

env:
  ARTIFACT_NAME: gameboy-test-roms

jobs:

  blargg-roms:
    name: create Blargg test rom artifact
    runs-on: ubuntu-latest
    steps:
      # checkout
      - name: checkout code
        uses: actions/checkout@v2
      # build
      - name: assemble Blargg test roms
        run: src/assemble.sh blargg
      # upload
      - name: upload Blargg artifact
        uses: actions/upload-artifact@v1
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: artifacts/blargg

  gambatte-roms:
    name: create Gambatte test rom artifact
    runs-on: ubuntu-latest
    steps:
      # checkout
      - name: checkout code
        uses: actions/checkout@v2
      # build
      - name: assemble Gambatte test roms
        run: src/assemble.sh gambatte
      # upload
      - name: upload Gambatte artifact
        uses: actions/upload-artifact@v1
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: artifacts/gambatte

  mooneye-gb-roms:
    name: create Mooneye GB test rom artifact
    runs-on: ubuntu-latest
    steps:
      # checkout
      - name: checkout code
        uses: actions/checkout@v2
      # build
      - name: assemble Mooneye GB test roms
        run: src/assemble.sh mooneye-gb
      # upload
      - name: upload Mooneye GB artifact
        uses: actions/upload-artifact@v1
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: artifacts/mooneye-gb

  upload-release-asset:
    name: upload release asset
    # if: startsWith( github.ref, 'refs/tags/v' )
    runs-on: ubuntu-latest
    needs: [blargg-roms, gambatte-roms, mooneye-gb-roms]
    steps:
      - name: download artifacts
        uses: actions/download-artifact@v1
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ./

      - name: list files
        run: ls -lsahR ./

#      - name: create release
#        id: create_release
#        uses: actions/create-release@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          tag_name: ${{ github.ref }}
#          release_name: Release ${{ github.ref }}
#          draft: false
#          prerelease: false
#
#      - name: upload release asset
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          # This pulls from the CREATE RELEASE step above,
#          # referencing it's ID to get its outputs object,
#          # which include a `upload_url`.
#          # See this blog post for more info:
#          # https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#          asset_path: ./gameboy-test-roms.zip
#          asset_name: gameboy-test-roms.zip
#          asset_content_type: application/zip
